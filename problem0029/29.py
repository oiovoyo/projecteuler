'''


Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:
    22=4, 23=8, 24=16, 25=32
    32=9, 33=27, 34=81, 35=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 <= a <= 100 and 2 <= b <= 100?



'''
import sys
import os
sys.path.append(os.path.dirname(sys.argv[0]) + "\\..\\common\\")
import number
N = number.number()

def get_n_a_b(n,a,b):
	ret = []
	for i in range(a,b+1):
		ret.append(N.power(n,i))
	return ret

	
def get_result():
	a=2
	b=100
	result = []
	for i in range(a,b+1):
		ret = get_n_a_b(i, a, b)
		for item in ret:
			if number.array_find(result, item) == False:
				result.append(item)
	return str(len(result))
if __name__ == "__main__":
	print ("result is : %s" % get_result())